// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#config Name      CombinedTerrain
#config Base      Leaf
#config Config    CombinedTerrainConfig
#config Subtype   CombinedTerrain
#config FixedType Terrain


// ===== CombinedTerrainAsset.h =====
#include <autoingest/.idl/storage/CombinedTerrainConfig.h>

// ===== CombinedTerrainAsset.cpp =====


// ===== CombinedTerrainAssetD.h =====
class CombinedTerrainAssetImplD {
};

class CombinedTerrainAssetVersionImplD {
};


// ===== CombinedTerrainAssetD.cpp =====
#include <khException.h>

void
CombinedTerrainAssetVersionImplD::DoSubmitTask(void)
{
  TaskDef task(*this);
  std::vector<std::string> inputs;
  GetInputFilenames(inputs);

  if (inputs.empty()) {
    throw khException("INTERNAL ERROR: No terrain to combine");
  }

  task.AddInputs(inputs);

  // TODO: Implement size estimate
  task.AddOutput(WorkingFileRef("terrain.pack"),
                 0); // size estimate

  task << "gecombineterrain"
       << "--indexversion"  << config.index_version_
       << "--numcpus" << "$NUMCPU"
       << "--output" << "$OUTPUT"
       << "$INPUTS";
  theAssetManager.SubmitTask(GetRef(), task);
}
