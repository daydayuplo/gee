// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#config Name      Mosaic
#config Base      Leaf
#config Config    MosaicConfig
#config Subtype   Mosaic
// #config FixedType
#config WithReuse 1


// ===== MosaicAsset.h =====
#include <autoingest/.idl/storage/MosaicConfig.h>

// ===== MosaicAsset.cpp =====

// ===== MosaicAssetD.h =====
class MosaicAssetVersionImplD {
 protected:
  virtual bool OfflineInputsBreakMe(void) const { return true; }
};

// ===== MosaicAssetD.cpp =====
void
MosaicAssetVersionImplD::DoSubmitTask(void)
{
  TaskDef task(*this);
  std::vector<std::string> inputs;
  GetInputFilenames(inputs);
  task.AddInputs(inputs);

  task.AddOutput(WorkingFileRef("mosaic.khvr"),
                 512000);  // way worst case size estimate (.5 MB)

  task << "gevirtualraster";
  if (!config.fill.empty()) {
    task << "--fill" << config.fill;
    task << "--tolerance" << config.fillTolerance;
  }
  if (!config.lutfile.empty())
    task << "--lut" << config.lutfile;
  if (!config.overridesrs.empty()) {
    task << "--srs" << config.overridesrs;
  }
  task << "-o" << "$OUTPUT" << "$INPUTS";

  theAssetManager.SubmitTask(GetRef(), task);
}
