// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#config Name      RasterDBRoot
#config Base      Leaf
#config Config    RasterDBRootAssetConfig
#config Subtype   RasterDBRoot
// #config FixedType


// ===== RasterDBRootAsset.h =====
#include <autoingest/.idl/storage/RasterDBRootConfig.h>

// ===== RasterDBRootAsset.cpp =====

// ===== RasterDBRootAssetD.h =====


// ===== RasterDBRootAssetD.cpp =====
#include <khException.h>
#include <autoingest/plugins/RasterProductAsset.h>

void
RasterDBRootAssetVersionImplD::DoSubmitTask(void)
{
  // Create and save the config that the tool uses
  RasterDBRootGenConfig genconfig;
  for (std::vector<RasterDBRootAssetConfig::Layer>::const_iterator layer
         = config.layers_.begin();
       layer != config.layers_.end(); ++layer) {
    genconfig.layers_.push_back(RasterDBRootGenConfig::Layer(
                                    layer->legend_,
                                    layer->channel_id_,
				    layer->asset_uuid_));
  }
  genconfig.used_provider_ids_ = config.used_provider_ids_;
  std::string config_filename = WorkingFilename("config.xml");
  genconfig.Save(config_filename);

  TaskDef task(*this);
  task.AddOutput(WorkingFileRef("dbroot"),
                 50000 /* sizeEstimate */);

  // submit the task
  task << "gerasterdbrootgen"
       << ((type == AssetDefs::Imagery) ? "--imagery" : "--terrain")
       << "--config" << config_filename
       << "$OUTPUT";
  theAssetManager.SubmitTask(GetRef(), task);
}
