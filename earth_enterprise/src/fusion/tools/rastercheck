#!/usr/bin/perl -w-
#
# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

use strict;
use FindBin;
use File::Basename;

sub usage
{
    warn "usage: $FindBin::Script <pyrset1> <pyrset2>\n";
    warn "       <pyrset>'s may be a new raster product (.kip, .ktp, .kmp)\n";
    die "       or an old pyramid filename.\n";
}

my $pyrset1 = shift;
my $pyrset2 = shift;
usage() unless defined($pyrset1) && defined($pyrset2);

my @pyrlist1 = FindPyramids($pyrset1);
my @pyrlist2 = FindPyramids($pyrset2);
if (!@pyrlist1) {
    warn "Unable to find pyramids for $pyrset1\n";
    usage();
}
if (!@pyrlist2) {
    warn "Unable to find pyramids for $pyrset2\n";
    usage();
}
if (@pyrlist1 != @pyrlist2) {
    die "$pyrset1 and $pyrset2 differ (number of levels)\n";
}
my $numdiff = 0;
my $i;
for ($i = 0; $i < @pyrlist1; ++$i) {
    if (system("diff -q $pyrlist1[$i] $pyrlist2[$i]")) {
	++$numdiff;
    }
}
exit($numdiff);



sub FindPyramids {
    my ($hint) = @_;
    my @results;
    my ($base, $ext);
    if ($hint =~ /^(.*)(\d\d).pyr$/) {
	$base = $1;
	$ext  = '.pyr';
    } elsif ($hint =~ /^(.*)(\d\d)-mask.pyr$/) {
	$base = $1;
	$ext  = '-mask.pyr';
    } elsif (-d $hint) {
	$base = $hint.'/level';
	$ext  = '.pyr';
    } else {
	return @results;
    }
    my $i;
    for ($i = 0; $i < 32; ++$i) {
	my $name = sprintf "%s%02d%s", $base, $i, $ext;
	push @results, $name if (-e $name);
    }
    return @results;
}
